var app=angular.module("admin",["ngRoute"]);app.config(["$routeProvider",function(e){e.when("/dic",{controller:"Dic",templateUrl:"pages/dic.html"}).when("/userManager",{controller:"userManager",templateUrl:"pages/userManager.html"}).when("/userList",{controller:"userIndex",templateUrl:"pages/userIndex.html"}).when("/roles",{controller:"roles",templateUrl:"pages/roles.html"}).otherwise({redirectTo:"/dic"})}]);var app=angular.module("app",["ngRoute"]);app.config(["$routeProvider",function(e){e.when("/order/index",{controller:"OrderIndex",templateUrl:"pages/orderindex.html"}).when("/order/create",{controller:"OrderCreate",templateUrl:"pages/ordercreate.html"}).when("/order/detail/:_id",{controller:"OrderDetail",templateUrl:"pages/orderdetail.html"}).otherwise({redirectTo:"/order/index"})}]);var app=angular.module("admin"),title="Dictionary Management";app.controller("Dic",["$scope","$http","$route",function(e,t,r){document.title=title,t.get("/dics").success(function(t){e.dics=t}),t.get("/dicTypes").success(function(t){e.dicTypes=t}),e.getDic=function(r){t.get("/dics/"+r).success(function(t){t.code||(e.dicEdit=t)})},e.createDic=function(e){t.post("/dics",e).success(function(e){e.code||r.reload()})},e.deleteDic=function(e){t["delete"]("/dics/"+e).success(function(e){0==e.code&&r.reload()})}}]);var app=angular.module("admin"),title="User Management";app.controller("userManager",["$scope","$http","$route",function(e,t,r){document.title=title,t.get("/roles").success(function(t){e.roles=t}),e.userName="",e.selectedRoleName="",e.createUser=function(){console.log("Create User"),console.log(e.userName),console.log(e.selectedRoleName);e.userName,e.selectedRoleName}}]),app.controller("userIndex",["$scope","$http","$route",function(e,t,r){t.get("/users").success(function(t){e.users=t})}]);var app=angular.module("app");app.controller("OrderIndex",["$scope","$http","$route",function(e,t,r){document.title="Order List",t.get("/orders").success(function(t){e.orders=t}),e.deleteOrder=function(e){t["delete"]("/orders/"+e).success(function(e){r.reload()})}}]);var fruits=[{fruit_name:"Apple",unit_price:1.2,fruit_quantity:0,selectd:!1},{fruit_name:"Banana",unit_price:2.3,fruit_quantity:0,selectd:!1},{fruit_name:"Pitaya",unit_price:3.4,fruit_quantity:0,selectd:!1},{fruit_name:"Mango",unit_price:4.5,fruit_quantity:0,selectd:!1}];app.controller("OrderCreate",["$scope","$http","$location",function(e,t,r){document.title="Order Create",e.fruits=fruits,e.order={customer:"leo",amount:0,delivery_date:new Date,fruits:[]},e.calcTotalAmount=function(){var t=0;for(var r in e.fruits){var o=e.fruits[r];o.selectd&&(t+=o.unit_price*o.fruit_quantity)}e.order.amount=t},e.createOrder=function(o){for(var n in e.fruits){var c=e.fruits[n];c.selectd&&o.fruits.push({fruit_name:c.fruit_name,fruit_quantity:c.fruit_quantity})}t.post("/orders",o).success(function(e){e.code||r.path("/order/detail/"+e)})}}]),app.controller("OrderDetail",["$scope","$http","$routeParams",function(e,t,r){document.title="Order Detail";var o=r._id;t.get("/orders/"+o).success(function(t){t.code||(e.order=t)})}]);
//# sourceMappingURL=data:application/json;base64,
